###优先级从高到低分别是 ERROR,WARN,INFO,DEBUG
###  %m 输出代码中指定的消息
###  %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
###  %r 输出自应用启动到输出该log信息耗费的毫秒数
###  %c 输出所属的类目，通常就是所在类的全名
###  %t 输出产生该日志事件的线程名
###  %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
###  %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 ：10：28，921
###  %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。
###

### set log levels ###
log4j.rootLogger = info,stdout,D,E,F
### 自定义包使用何种级别日志，会在整体基础上进行再过滤 ###
log4j.logger.com.dingup.onlinetest=debug

### 输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = # %d{ABSOLUTE} #%p #%c #%l%n--> %m%n

### 输出到日志文件, tomcat目录长期保存 ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = ${catalina.home}/logs/syam/info.log
log4j.appender.D.Append = true
log4j.appender.D.Threshold = INFO
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss}-[%p]-%m%n

### 保存异常信息到单独文件, tomcat目录长期保存 ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File = ${catalina.home}/logs/syam/error.log
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss}-[%t:%r]-[%p]-[%c]%n--> %l%n--> %m%n